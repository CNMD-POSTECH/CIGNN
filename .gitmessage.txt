# --- COMMIT COMMAND ---
# Type can be:
#   feat     (new feature)
#   fix      (bug fix)
#   refactor (refactoring production code)
#   style    (formatting, missing semi colons, etc; no code change)
#   docs     (changes to documentation)
#   test     (adding or refactoring tests; no production code change)
#   chore    (updating grunt tasks etc; no production code change)
#   wip      (work in progress commit to be squashed -- do not push!)
# --------------------

# Example
# 1. Write a clear and concise commit title using the following format:
#    <type>(optional scope): <description>
# 2. Add a body if necessary to explain why the change was made.
# 3. Use ":wq" to save and exit when done.

# Example Commit Messages:
# feat(auth): add user authentication module
# fix(api): resolve null pointer exception in login endpoint
# refactor: reorganize folder structure for better clarity
# style: update eslint rules for consistent formatting
# docs: update README with setup instructions
# test: add unit tests for payment service
# chore: update dependencies to the latest version